#Использовать 1connector
#Использовать fs

Процедура ПолучитьАрхивССайта(Параметры) Экспорт
	
	Если Параметры.Свойство("apiurl") Тогда
		АпиУрл = Параметры.apiurl;
	КонецЕсли;
	Если Параметры.Свойство("id") Тогда
		ПроектИД = Параметры.id;
	КонецЕсли;
	Если Параметры.Свойство("token") Тогда
		Токен = Параметры.token;
	КонецЕсли;
	Если Параметры.Свойство("Айди") Тогда
		ЗаданиеИД = Параметры.Айди;
	КонецЕсли;
	
	УРЛ = ИдентификаторЗадания.СобратьУРЛ(АпиУрл, ПроектИД, , ЗаданиеИД);
	
	Заголовки = ИдентификаторЗадания.ЗаголовкиHTTP(Токен);
	
	Результат = КоннекторHTTP.Get(УРЛ, , Новый Структура("Заголовки", Заголовки)).ДвоичныеДанные();
	
	ИмяФайла = ПолучитьИмяВременногоФайла("zip");
	
	Результат.Записать(ИмяФайла);
	
	//ПутьКРезультатам = ФС.ОбъединитьПути(ТекущийКаталог(), "out", Параметры.allureresults);
	ПутьКРезультатам = Параметры.path;
	
	Если НЕ ФС.КаталогСуществует(ПутьКРезультатам) Тогда
		ФС.ОбеспечитьКаталог(ПутьКРезультатам);
	КонецЕсли;
	
	ПутьКИстории = ФС.ОбъединитьПути(ПутьКРезультатам, "history");
	
	Если НЕ ФС.КаталогСуществует(ПутьКИстории) Тогда
		ФС.ОбеспечитьПустойКаталог(ПутьКИстории);
	КонецЕсли;
	
	ЧтениеАрхива = Новый ЧтениеZipФайла(ИмяФайла);
	
	Для Каждого ЭлементАрхива Из ЧтениеАрхива.Элементы Цикл
		
		Если СтрНайти(ЭлементАрхива.ПолноеИмя, "history", НаправлениеПоиска.СНачала) Тогда

			Если СокрЛП(ЭлементАрхива.ПолноеИмя) = "public/history/" Тогда
				Продолжить;
			КонецЕсли;
			
			ЧтениеАрхива.Извлечь(ЭлементАрхива, ПутьКИстории,
				РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
			
		ИначеЕсли СтрНайти(ЭлементАрхива.ПолноеИмя, "executors", НаправлениеПоиска.СНачала) Тогда
			
			ЧтениеАрхива.Извлечь(ЭлементАрхива, ПутьКРезультатам,
				РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеАрхива.Закрыть();
	
	УдалитьФайлы(ИмяФайла);
	
	Результат = Неопределено;
	
КонецПроцедуры